{"ast":null,"code":"var _jsxFileName = \"U:\\\\CAREER\\\\BrainStation\\\\Projects\\\\christopher-mcgregor-capstone\\\\client\\\\src\\\\components\\\\Canvas\\\\Canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"./Canvas.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Canvas() {\n  _s();\n\n  //Setting initial state and references for canvas\n  const canvasRef = useRef(null);\n  const coloursRef = useRef(null);\n  const ctxRef = useRef(null);\n  let [isDrawing, setIsDrawing] = useState(false);\n  let [strokeStyle, setStrokeStyle] = useState(\"black\");\n  let [lineWidth, setLineWidth] = useState(3);\n  let [eraserWidth, setEraserWidth] = useState(3);\n  let [clearCanvas, setClearCanvas] = useState(false); //useEffect hook for canvas and tools\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const colours = coloursRef.current;\n    const coloursCtx = colours.getContext('2d');\n    let gradient = coloursCtx.createLinearGradient(0, 0, 0, 200);\n    gradient.addColorStop(0, 'rgba(0,0,0,0)');\n    gradient.addColorStop(1, \"#000\");\n    coloursCtx.fillStyle = gradient;\n    ctx.canvas.width = window.innerWidth - 80;\n    ctx.canvas.height = window.innerWidth / 2;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.strokeStyle = strokeStyle;\n    ctx.lineWidth = lineWidth;\n    ctx.imageSmoothingEnabled = false;\n    ctxRef.current = ctx;\n  }, [strokeStyle, lineWidth]); //Get mouse location\n\n  let mx = 0;\n  let my = 0;\n\n  const getMouse = event => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    let scaleX = canvas.width / rect.width;\n    let scaleY = canvas.height / rect.height;\n    mx = (event.clientX - rect.left) * scaleX;\n    my = (event.clientY - rect.top) * scaleY;\n    console.log(`mx position: ${mx}`);\n    console.log(`my position: ${my}`);\n  }; //Start drawing function\n\n\n  const startDraw = event => {\n    getMouse(event);\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(mx, my);\n    setIsDrawing(true);\n  }; //End drawing function\n\n\n  const endDraw = event => {\n    getMouse(event);\n    ctxRef.current.closePath();\n    setIsDrawing(false);\n  }; //Drawing function\n\n\n  const draw = event => {\n    if (!isDrawing) {\n      return;\n    }\n\n    getMouse(event);\n    ctxRef.current.lineTo(mx, my);\n    ctxRef.current.stroke();\n  }; //Changing brush/eraser width\n\n\n  const handleBrush = event => {\n    setLineWidth(event.target.value);\n  };\n\n  const handleEraser = event => {\n    setEraserWidth(event.target.value);\n  }; //Clear canvas function\n\n\n  const handleClearCanvas = () => {\n    setClearCanvas(true);\n  };\n\n  if (clearCanvas) {\n    const canvas = canvasRef.current;\n    const ctx = ctxRef.current;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    setClearCanvas(false);\n  } //Render component with all mouse events and references\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"homepage__canvas\",\n      ref: canvasRef,\n      onMouseDown: startDraw,\n      onMouseUp: endDraw,\n      onMouseMove: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage__paint-tools\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tools:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"homepage__paint-tools--label\",\n        children: \"Brush Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"10\",\n        value: lineWidth,\n        onChange: handleBrush\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"homepage__paint-tools--label\",\n        children: \"Fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"homepage__paint-tools--label\",\n        children: \"Stamp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"homepage__paint-tools--label\",\n        children: \"Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"10\",\n        value: eraserWidth,\n        onChange: handleEraser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"homepage__paint-tools--label\",\n        children: \"Colours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"homepage__paint-tools--colors\",\n        ref: coloursRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"homepage__paint-tools--label\",\n        children: \"Undo/redo?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"homepage__paint-tools--label\",\n        onClick: handleClearCanvas,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Canvas, \"Elg9w8rUSbOG8ERUWBrSjsLa9k0=\");\n\n_c = Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["U:/CAREER/BrainStation/Projects/christopher-mcgregor-capstone/client/src/components/Canvas/Canvas.js"],"names":["React","useRef","useEffect","useState","Canvas","canvasRef","coloursRef","ctxRef","isDrawing","setIsDrawing","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","eraserWidth","setEraserWidth","clearCanvas","setClearCanvas","canvas","current","ctx","getContext","colours","coloursCtx","gradient","createLinearGradient","addColorStop","fillStyle","width","window","innerWidth","height","lineCap","lineJoin","imageSmoothingEnabled","mx","my","getMouse","event","rect","getBoundingClientRect","scaleX","scaleY","clientX","left","clientY","top","console","log","startDraw","beginPath","moveTo","endDraw","closePath","draw","lineTo","stroke","handleBrush","target","value","handleEraser","handleClearCanvas","clearRect"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"./Canvas.scss\";\r\n\r\nexport default function Canvas() {\r\n  //Setting initial state and references for canvas\r\n  const canvasRef = useRef(null);\r\n  const coloursRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  let [isDrawing, setIsDrawing] = useState(false);\r\n  let [strokeStyle, setStrokeStyle] = useState(\"black\");\r\n  let [lineWidth, setLineWidth] = useState(3);\r\n  let [eraserWidth, setEraserWidth] = useState(3);\r\n  let [clearCanvas, setClearCanvas] = useState(false);\r\n\r\n  //useEffect hook for canvas and tools\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const colours = coloursRef.current;\r\n    const coloursCtx = colours.getContext('2d');\r\n    let gradient = coloursCtx.createLinearGradient(0,0,0,200)\r\n    gradient.addColorStop(0, 'rgba(0,0,0,0)')\r\n    gradient.addColorStop(1, \"#000\");\r\n    coloursCtx.fillStyle = gradient;\r\n    ctx.canvas.width = window.innerWidth - 80;\r\n    ctx.canvas.height = window.innerWidth / 2;\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.imageSmoothingEnabled = false;\r\n    ctxRef.current = ctx;\r\n  }, [strokeStyle, lineWidth]);\r\n\r\n  //Get mouse location\r\n  let mx = 0;\r\n  let my = 0;\r\n  const getMouse = (event) => {\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    let scaleX = canvas.width / rect.width;\r\n    let scaleY = canvas.height / rect.height;\r\n    mx = (event.clientX - rect.left) * scaleX;\r\n    my = (event.clientY - rect.top) * scaleY;\r\n    console.log(`mx position: ${mx}`);\r\n    console.log(`my position: ${my}`);\r\n  };\r\n\r\n  //Start drawing function\r\n  const startDraw = (event) => {\r\n    getMouse(event);\r\n    ctxRef.current.beginPath();\r\n    ctxRef.current.moveTo(mx, my);\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  //End drawing function\r\n  const endDraw = (event) => {\r\n    getMouse(event);\r\n    ctxRef.current.closePath();\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  //Drawing function\r\n  const draw = (event) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    getMouse(event);\r\n    ctxRef.current.lineTo(mx, my);\r\n    ctxRef.current.stroke();\r\n  };\r\n\r\n  //Changing brush/eraser width\r\n\r\n  const handleBrush = (event) => {\r\n    setLineWidth(event.target.value);\r\n  };\r\n\r\n  const handleEraser = (event) => {\r\n    setEraserWidth(event.target.value);\r\n  };\r\n\r\n  //Clear canvas function\r\n  const handleClearCanvas = () => {\r\n    setClearCanvas(true);\r\n  };\r\n\r\n  if (clearCanvas) {\r\n    const canvas = canvasRef.current;\r\n    const ctx = ctxRef.current;\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    setClearCanvas(false);\r\n  }\r\n\r\n  //Render component with all mouse events and references\r\n  return (\r\n    <div>\r\n      <canvas\r\n        className=\"homepage__canvas\"\r\n        ref={canvasRef}\r\n        onMouseDown={startDraw}\r\n        onMouseUp={endDraw}\r\n        onMouseMove={draw}\r\n      ></canvas>\r\n      <div className=\"homepage__paint-tools\">\r\n        <h2>Tools:</h2>\r\n        <h4 className=\"homepage__paint-tools--label\">Brush Size</h4>\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          value={lineWidth}\r\n          onChange={handleBrush}\r\n        ></input>\r\n        <h4 className=\"homepage__paint-tools--label\">Fill</h4>\r\n        <h4 className=\"homepage__paint-tools--label\">Stamp</h4>\r\n        <h4 className=\"homepage__paint-tools--label\">Eraser</h4>\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          value={eraserWidth}\r\n          onChange={handleEraser}\r\n        ></input>\r\n        <h4 className=\"homepage__paint-tools--label\">Colours</h4>\r\n        <canvas\r\n          className=\"homepage__paint-tools--colors\"\r\n          ref={coloursRef}\r\n        ></canvas>\r\n        <h4 className=\"homepage__paint-tools--label\">Undo/redo?</h4>\r\n        <h4\r\n          className=\"homepage__paint-tools--label\"\r\n          onClick={handleClearCanvas}\r\n        >\r\n          Clear\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}