{"ast":null,"code":"var _jsxFileName = \"U:\\\\CAREER\\\\BrainStation\\\\Projects\\\\christopher-mcgregor-capstone\\\\src\\\\components\\\\Main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Canvas from \"../Canvas/Canvas\";\nimport Button from \"../Button/Button\";\nimport PaintTools from \"../PaintTools/PaintTools\";\nimport \"./Main.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  //Setting initial state and reference for canvas\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  let [isDrawing, setIsDrawing] = useState(false);\n  let [strokeStyle, setStrokeStyle] = useState(\"black\");\n  let [lineWidth, setLineWidth] = useState(3); //useEffect hook for brush strokes\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.strokeStyle = strokeStyle;\n    ctx.lineWidth = lineWidth;\n    ctxRef.current = ctx;\n  }, [strokeStyle, lineWidth]); //Start drawing function\n\n  const startDraw = event => {\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n    setIsDrawing(true);\n  }; //End drawing function\n\n\n  const endDraw = () => {\n    ctxRef.current.closePath();\n    setIsDrawing(false);\n  }; //Drawing function\n\n\n  const draw = event => {\n    if (!isDrawing) {\n      return;\n    }\n\n    ctxRef.current.lineTo(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\n    ctxRef.current.stroke();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      ref: canvasRef,\n      startDraw: startDraw,\n      endDraw: endDraw,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaintTools, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"homepage__button--load\",\n        text: \"Load Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"homepage__button--save\",\n        text: \"Save Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"dKn5lr5Sh99IMHej1H2A3IomqRE=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["U:/CAREER/BrainStation/Projects/christopher-mcgregor-capstone/src/components/Main/Main.js"],"names":["React","useRef","useEffect","useState","Canvas","Button","PaintTools","Main","canvasRef","ctxRef","isDrawing","setIsDrawing","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","canvas","current","ctx","getContext","lineCap","lineJoin","startDraw","event","beginPath","moveTo","nativeEvent","offsetX","offsetY","endDraw","closePath","draw","lineTo","stroke"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B;AACA,QAAMC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMQ,MAAM,GAAGR,MAAM,CAAC,IAAD,CAArB;AACA,MAAI,CAACS,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAAxC;AACA,MAAI,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,OAAD,CAA5C;AACA,MAAI,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAAxC,CAN6B,CAQ7B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,MAAM,GAAGR,SAAS,CAACS,OAAzB;AACA,UAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACAD,IAAAA,GAAG,CAACE,OAAJ,GAAc,OAAd;AACAF,IAAAA,GAAG,CAACG,QAAJ,GAAe,OAAf;AACAH,IAAAA,GAAG,CAACN,WAAJ,GAAkBA,WAAlB;AACAM,IAAAA,GAAG,CAACJ,SAAJ,GAAgBA,SAAhB;AACAL,IAAAA,MAAM,CAACQ,OAAP,GAAiBC,GAAjB;AACD,GARQ,EAQN,CAACN,WAAD,EAAcE,SAAd,CARM,CAAT,CAT6B,CAmB7B;;AACA,QAAMQ,SAAS,GAAIC,KAAD,IAAW;AAC3Bd,IAAAA,MAAM,CAACQ,OAAP,CAAeO,SAAf;AACAf,IAAAA,MAAM,CAACQ,OAAP,CAAeQ,MAAf,CAAsBF,KAAK,CAACG,WAAN,CAAkBC,OAAxC,EAAiDJ,KAAK,CAACG,WAAN,CAAkBE,OAAnE;AACAjB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAJD,CApB6B,CA0B7B;;;AACA,QAAMkB,OAAO,GAAG,MAAM;AACpBpB,IAAAA,MAAM,CAACQ,OAAP,CAAea,SAAf;AACAnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD,CA3B6B,CAgC7B;;;AACA,QAAMoB,IAAI,GAAIR,KAAD,IAAW;AACtB,QAAI,CAACb,SAAL,EAAgB;AACd;AACD;;AACDD,IAAAA,MAAM,CAACQ,OAAP,CAAee,MAAf,CAAsBT,KAAK,CAACG,WAAN,CAAkBC,OAAxC,EAAiDJ,KAAK,CAACG,WAAN,CAAkBE,OAAnE;AAEAnB,IAAAA,MAAM,CAACQ,OAAP,CAAegB,MAAf;AACD,GAPD;;AASA,sBACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,GAAG,EAAEzB,SADP;AAEE,MAAA,SAAS,EAAEc,SAFb;AAGE,MAAA,OAAO,EAAEO,OAHX;AAIE,MAAA,IAAI,EAAEE;AAJR;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzDuBxB,I;;KAAAA,I","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport Canvas from \"../Canvas/Canvas\";\r\nimport Button from \"../Button/Button\";\r\nimport PaintTools from \"../PaintTools/PaintTools\";\r\nimport \"./Main.scss\";\r\n\r\nexport default function Main() {\r\n  //Setting initial state and reference for canvas\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  let [isDrawing, setIsDrawing] = useState(false);\r\n  let [strokeStyle, setStrokeStyle] = useState(\"black\");\r\n  let [lineWidth, setLineWidth] = useState(3);\r\n\r\n  //useEffect hook for brush strokes\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.lineCap = \"round\";\r\n    ctx.lineJoin = \"round\";\r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.lineWidth = lineWidth;\r\n    ctxRef.current = ctx;\r\n  }, [strokeStyle, lineWidth]);\r\n\r\n  //Start drawing function\r\n  const startDraw = (event) => {\r\n    ctxRef.current.beginPath();\r\n    ctxRef.current.moveTo(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  //End drawing function\r\n  const endDraw = () => {\r\n    ctxRef.current.closePath();\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  //Drawing function\r\n  const draw = (event) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    ctxRef.current.lineTo(event.nativeEvent.offsetX, event.nativeEvent.offsetY);\r\n\r\n    ctxRef.current.stroke();\r\n  };\r\n\r\n  return (\r\n    <section className=\"homepage\">\r\n      <Canvas\r\n        ref={canvasRef}\r\n        startDraw={startDraw}\r\n        endDraw={endDraw}\r\n        draw={draw}\r\n      />\r\n      <PaintTools />\r\n      <div>\r\n        <Button className=\"homepage__button--load\" text=\"Load Image\" />\r\n        <Button className=\"homepage__button--save\" text=\"Save Image\" />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}