{"ast":null,"code":"var _jsxFileName = \"U:\\\\CAREER\\\\BrainStation\\\\Projects\\\\christopher-mcgregor-capstone\\\\client\\\\src\\\\components\\\\Canvas\\\\Canvas.js\";\nimport React, { createRef } from \"react\";\nimport \"./Canvas.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Canvas extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isDrawing: false,\n      strokeStyle: \"black\",\n      lineWidth: 3,\n      eraserWidth: 3,\n      clearCanvas: false\n    };\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    let {\n      isDrawing,\n      strokeStyle,\n      lineWidth,\n      eraserWidth,\n      clearCanvas\n    } = this.state; //Get mouse location\n\n    let mx = 0;\n    let my = 0;\n\n    const getMouse = event => {\n      const canvas = canvasRef.current;\n      mx = event.clientX - canvas.offsetLeft;\n      my = event.clientY - canvas.offsetTop;\n    }; //Start drawing function\n\n\n    const startDraw = event => {\n      getMouse(event);\n      ctxRef.current.beginPath();\n      ctxRef.current.moveTo(mx, my);\n      this.setState({\n        isDrawing: true\n      });\n    }; //End drawing function\n\n\n    const endDraw = event => {\n      getMouse(event);\n      ctxRef.current.closePath();\n      this.setState({\n        isDrawing: false\n      });\n    }; //Drawing function\n\n\n    const draw = event => {\n      if (!this.state.isDrawing) {\n        return;\n      }\n\n      getMouse(event);\n      ctxRef.current.lineTo(mx, my);\n      ctxRef.current.stroke();\n    }; //Changing brush/eraser width\n\n\n    const handleBrush = event => {\n      this.setState({\n        lineWidth: event.target.value\n      });\n    };\n\n    const handleEraser = event => {\n      this.setState({\n        eraserWidth: event.target.value\n      });\n    }; //Clear canvas function\n\n\n    const handleClearCanvas = () => {\n      this.setState({\n        clearCanvas: true\n      });\n    };\n\n    if (clearCanvas) {\n      const canvas = canvasRef.current;\n      const ctx = ctxRef.current;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      this.setState({\n        clearCanvas: false\n      });\n    } //Render component with all mouse events and references\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"homepage__canvas\",\n        ref: canvasRef,\n        onMouseDown: startDraw,\n        onMouseUp: endDraw,\n        onMouseMove: draw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homepage__paint-tools\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tools:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"homepage__paint-tools--label\",\n          children: \"Brush Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: lineWidth,\n          onChange: handleBrush\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"homepage__paint-tools--label\",\n          children: \"Fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"homepage__paint-tools--label\",\n          children: \"Stamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"homepage__paint-tools--label\",\n          children: \"Eraser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: eraserWidth,\n          onChange: handleEraser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"homepage__paint-tools--label\",\n          children: \"Colours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          className: \"homepage__paint-tools--colors\",\n          ref: coloursRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"homepage__paint-tools--label\",\n          children: \"Undo/redo?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"homepage__paint-tools--label\",\n          onClick: handleClearCanvas,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["U:/CAREER/BrainStation/Projects/christopher-mcgregor-capstone/client/src/components/Canvas/Canvas.js"],"names":["React","createRef","Canvas","Component","state","isDrawing","strokeStyle","lineWidth","eraserWidth","clearCanvas","componentDidUpdate","render","mx","my","getMouse","event","canvas","canvasRef","current","clientX","offsetLeft","clientY","offsetTop","startDraw","ctxRef","beginPath","moveTo","setState","endDraw","closePath","draw","lineTo","stroke","handleBrush","target","value","handleEraser","handleClearCanvas","ctx","clearRect","width","height","coloursRef"],"mappings":"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","sourcesContent":["import React, { createRef } from \"react\";\r\nimport \"./Canvas.scss\";\r\n\r\nexport default class Canvas extends React.Component {\r\n  //Setting initial state and references for canvas\r\n  state = {\r\n    isDrawing: false,\r\n    strokeStyle: \"black\",\r\n    lineWidth: 3,\r\n    eraserWidth: 3,\r\n    clearCanvas: false,\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    \r\n  }\r\n\r\n  render() {\r\n    \r\n    let { isDrawing, strokeStyle, lineWidth, eraserWidth, clearCanvas } = this.state;\r\n    \r\n    //Get mouse location\r\n    let mx = 0;\r\n    let my = 0;\r\n    const getMouse = (event) => {\r\n      const canvas = canvasRef.current;\r\n      mx = event.clientX - canvas.offsetLeft;\r\n      my = event.clientY - canvas.offsetTop;\r\n    };\r\n\r\n    //Start drawing function\r\n    const startDraw = (event) => {\r\n      getMouse(event);\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.moveTo(mx, my);\r\n      this.setState({ isDrawing: true });\r\n    };\r\n\r\n    //End drawing function\r\n    const endDraw = (event) => {\r\n      getMouse(event);\r\n      ctxRef.current.closePath();\r\n      this.setState({ isDrawing: false });\r\n    };\r\n\r\n    //Drawing function\r\n    const draw = (event) => {\r\n      if (!this.state.isDrawing) {\r\n        return;\r\n      }\r\n      getMouse(event);\r\n      ctxRef.current.lineTo(mx, my);\r\n      ctxRef.current.stroke();\r\n    };\r\n\r\n    //Changing brush/eraser width\r\n\r\n    const handleBrush = (event) => {\r\n      this.setState({ lineWidth: event.target.value });\r\n    };\r\n\r\n    const handleEraser = (event) => {\r\n      this.setState({ eraserWidth: event.target.value });\r\n    };\r\n\r\n    //Clear canvas function\r\n    const handleClearCanvas = () => {\r\n      this.setState({ clearCanvas: true });\r\n    };\r\n\r\n    if (clearCanvas) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = ctxRef.current;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      this.setState({ clearCanvas: false });\r\n    }\r\n\r\n    \r\n\r\n    //Render component with all mouse events and references\r\n    return (\r\n      <div>\r\n        <canvas\r\n          className=\"homepage__canvas\"\r\n          ref={canvasRef}\r\n          onMouseDown={startDraw}\r\n          onMouseUp={endDraw}\r\n          onMouseMove={draw}\r\n        ></canvas>\r\n        <div className=\"homepage__paint-tools\">\r\n          <h2>Tools:</h2>\r\n          <h4 className=\"homepage__paint-tools--label\">Brush Size</h4>\r\n          <input\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max=\"10\"\r\n            value={lineWidth}\r\n            onChange={handleBrush}\r\n          ></input>\r\n          <h4 className=\"homepage__paint-tools--label\">Fill</h4>\r\n          <h4 className=\"homepage__paint-tools--label\">Stamp</h4>\r\n          <h4 className=\"homepage__paint-tools--label\">Eraser</h4>\r\n          <input\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max=\"10\"\r\n            value={eraserWidth}\r\n            onChange={handleEraser}\r\n          ></input>\r\n          <h4 className=\"homepage__paint-tools--label\">Colours</h4>\r\n          <canvas\r\n            className=\"homepage__paint-tools--colors\"\r\n            ref={coloursRef}\r\n          ></canvas>\r\n          <h4 className=\"homepage__paint-tools--label\">Undo/redo?</h4>\r\n          <h4\r\n            className=\"homepage__paint-tools--label\"\r\n            onClick={handleClearCanvas}\r\n          >\r\n            Clear\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}